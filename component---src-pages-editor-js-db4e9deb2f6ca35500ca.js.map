{"version":3,"file":"component---src-pages-editor-js-db4e9deb2f6ca35500ca.js","mappings":"y/BAGMA,EAAAA,SAAAA,GACF,WAAYC,GAAQ,IAAD,SACf,cAAMA,IAAN,MAOJC,wBARmB,iBAQM,oGACGC,OAAOC,sBADV,cACfC,EADe,gBAEf,EAAKC,iBAAiBD,GAAU,GAFjB,OAGrB,EAAKE,SAAS,CAAEC,iBAAiBH,IAHZ,2CARN,EAcnBI,WAdmB,iBAcP,wGACAD,EAAqB,EAAKE,MAA1BF,iBADA,uBAEmBA,EAAiBG,UAFpC,oFAGe,UADLC,EAFV,SAGMC,KAHN,yDAMCD,EAAME,KAAKC,WAAW,KANvB,yEASeH,EAAMI,UATrB,eASEC,EATF,iBAUeA,EAAKC,OAVpB,cAUEA,EAVF,QAqBKC,QAAQ,gBAAkB,GArB/B,wBAuBAC,QAAQC,IAAIJ,EAAKH,MACXQ,EAASJ,EAAKK,QAAQ,cAAc,gBAxB1C,UAyByB,EAAKC,cAAcP,EAAKH,KAAMN,GAzBvD,eAyBMiB,EAzBN,iBA0BM,EAAKC,UAAUD,EAAWH,GA1BhC,sXAdO,EA6CnBhB,iBA7CmB,mCA6CA,WAAOmB,EAAYE,GAAnB,8EACTC,EAAU,GACZD,IACFC,EAAQC,KAAO,aAHF,SAMJJ,EAAWK,gBAAgBF,GANvB,sBAMqC,YANrC,+CAON,GAPM,uBAUJH,EAAWM,kBAAkBH,GAVzB,sBAUuC,YAVvC,gDAWN,GAXM,kCAcR,GAdQ,4CA7CA,0DA8DnBJ,cA9DmB,mCA8DH,WAAOQ,EAAUC,GAAjB,6EACRA,EADQ,yCACWA,EAAWC,cAAcF,EAAU,CAAEG,QAAO,KADvD,cAENC,EAAUH,GAA0B,YAF9B,SAGa9B,OAAOkC,mBAAmB,CAC/CC,cAAeN,EACfI,QAASA,IALD,cAGNX,EAHM,yBAOLA,GAPK,2CA9DG,0DAwEnBC,UAxEmB,mCAwEP,WAAOD,EAAYc,GAAnB,uFACed,EAAWe,iBAD1B,cACFC,EADE,gBAEFA,EAASC,MAAMH,GAFb,uBAGFE,EAASE,QAHP,2CAxEO,wDAGf,EAAKjC,MAAQ,CACTF,iBAAkB,MAJP,EAiGlB,OAlGCR,EAAAA,EAAAA,GAAAA,EAAAA,GAOD,YAwED4C,OAAA,WACI,MAGIC,KAAKnC,MADLF,GAFJ,EACIsC,cADJ,EAEItC,kBAEJ,OACI,2BACI,oCAEA,0BAAQuC,QAASF,KAAK3C,wBAAtB,wBAGA,yBAAIM,GAAoBA,EAAiBM,MACzC,2BAAS,2BAET,0BAAQiC,QAASF,KAAKpC,WAAtB,UAIX,EAlGCT,CAAsBgD,EAAAA,WAqG5B,a,qBCxGA,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAP,EAAOO,GAILF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,GAIxB,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOpB,KACPqB,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGI,MAAMH,EAAMC,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,GAGnEhB,OAAMiB,O","sources":["webpack://dream-machine/./src/pages/editor.js","webpack://dream-machine/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { Component } from 'react';\n// const fs = require(\"fs\");\n\nclass ConverterPage extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            mdxSaveDirHandle: null,\n        }\n    }\n\n    chooseMDXSaveDirectory = async () => {\n        const dirHandle = await window.showDirectoryPicker();\n        await this.verifyPermission(dirHandle,true);\n        this.setState({ mdxSaveDirHandle:dirHandle });\n    }\n\n    onConvert = async () => {\n        const { mdxSaveDirHandle } = this.state;\n        for await ( const entry of mdxSaveDirHandle.values() ) {\n            if (entry.kind !== 'file') {\n                break;\n            }\n            if ( entry.name.startsWith('.') ) {\n                continue;\n            }\n            const file = await entry.getFile();\n            const text = await file.text();\n\n            // if (text.indexOf(\"nextItem:\") == -1)\n            // {\n            //     const lastIndex = text.lastIndexOf(\"---\");\n            //     const blank = \"nextItem: []\\n\";\n            //     const output = [text.slice(0, lastIndex), blank, text.slice(lastIndex)].join('');\n\n            //     const fileHandle = await this.getSaveHandle(file.name, mdxSaveDirHandle);\n            //     await this.writeFile(fileHandle,output);\n            // }\n            if (text.indexOf(\"nextItem:[]\") > -1)\n            {\n                console.log(file.name);\n                const result = text.replace(\"nextItem:[]\",\"nextItem: []\");\n                const fileHandle = await this.getSaveHandle(file.name, mdxSaveDirHandle);\n                await this.writeFile(fileHandle,result);\n            }\n        }\n    }\n\n    verifyPermission = async (fileHandle, readWrite) => {\n        const options = {};\n        if (readWrite) {\n          options.mode = 'readwrite';\n        }\n        // Check if permission was already granted. If so, return true.\n        if ((await fileHandle.queryPermission(options)) === 'granted') {\n          return true;\n        }\n        // Request permission. If the user grants permission, return true.\n        if ((await fileHandle.requestPermission(options)) === 'granted') {\n          return true;\n        }\n        // The user didn't grant permission, so return false.\n        return false;\n      }\n\n    getSaveHandle = async (filename, saveHandle) => {\n        if (saveHandle) return saveHandle.getFileHandle(filename, { create:true });\n        const startIn = saveHandle ? saveHandle : 'Documents';\n        const fileHandle = await window.showSaveFilePicker({\n            suggestedName: filename,\n            startIn: startIn,\n          });\n        return fileHandle;\n    }\n\n    writeFile = async (fileHandle, contents) => {\n        const writable = await fileHandle.createWritable();\n        await writable.write(contents);\n        await writable.close();\n    }\n\n    render() {\n        const {\n            jsonDirHandle,\n            mdxSaveDirHandle\n        } = this.state;\n        return(\n            <div>\n                <h1>Editor</h1>\n\n                <button onClick={this.chooseMDXSaveDirectory}>\n                    CHOOSE MDX DIRECTORY\n                </button>\n                <p>{mdxSaveDirHandle && mdxSaveDirHandle.name}</p>\n                <br></br><br></br>\n\n                <button onClick={this.onConvert}>EDIT</button>\n\n            </div>\n        )\n    }\n}\n\nexport default ConverterPage;\n\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["ConverterPage","props","chooseMDXSaveDirectory","window","showDirectoryPicker","dirHandle","verifyPermission","setState","mdxSaveDirHandle","onConvert","state","values","entry","kind","name","startsWith","getFile","file","text","indexOf","console","log","result","replace","getSaveHandle","fileHandle","writeFile","readWrite","options","mode","queryPermission","requestPermission","filename","saveHandle","getFileHandle","create","startIn","showSaveFilePicker","suggestedName","contents","createWritable","writable","write","close","render","this","jsonDirHandle","onClick","Component","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined"],"sourceRoot":""}